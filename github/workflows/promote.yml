# This workflow will run when a production release is published.
name: Promote a release to production

on:
  release:
    types:
      - released
concurrency: continuous-deployment
env:
  AWS_DEFAULT_REGION: ap-southeast-2
  ECR: ${{ vars.ECR_URL }}
jobs:
  deploy:
    runs-on: ubuntu-latest-arm
    environment: production
    permissions:
      contents: read
      id-token: write
    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ env.AWS_DEFAULT_REGION }}
          role-to-assume: ${{ vars.ECR_ROLE }}
          role-session-name: promote
      - name: Get image manifest
        run: |
          echo "MANIFEST<<EOF" >> $GITHUB_ENV
          aws ecr batch-get-image \
            --repository-name ${{ vars.ECR_NAME }} \
            --image-ids "imageTag=$(echo $GITHUB_REF_NAME | sed 's|/|-|g')" \
            --region ${{ env.AWS_DEFAULT_REGION }} \
            --query images[].imageManifest \
            --output text >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV
      - name: Mark image as a production release candidate
        run: >-
          aws ecr put-image
          --repository-name ${{ vars.ECR_NAME }}
          --image-tag "$(echo $GITHUB_REF_NAME | sed 's|release/|prod-release-|g')"
          --image-manifest "$MANIFEST"
          --region ${{ env.AWS_DEFAULT_REGION }}
          --output json
      - name: Mark image as the current production release
        run: >-
          aws ecr put-image
          --repository-name ${{ vars.ECR_NAME }}
          --image-tag production
          --image-manifest "$MANIFEST"
          --region ${{ env.AWS_DEFAULT_REGION }}
          --output json
      - name: Redeploy production containers
        run: >-
          aws ecs update-service
          --cluster ${{ vars.ecs_cluster }}
          --service ${{ vars.ecs_service }}
          --force-new-deployment
          --region ${{ env.AWS_DEFAULT_REGION }}
